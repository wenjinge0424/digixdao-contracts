#!/usr/bin/env ruby

require 'ethereum'
require 'active_support'
require 'active_support/core_ext'
require 'colorize'
require 'pry'
require 'securerandom'

base_dir = ENV['PWD']
project = Ethereum::ProjectInitializer.new("#{base_dir}/contracts/*.sol", true)
$ethereum_client = Ethereum::HttpClient.new("localhost", "8545")
$eth = $ethereum_client
$formatter = Ethereum::Formatter.new
$f = $formatter

project.contracts.each do |contract|
  contract.build($ethereum_client)
end


coinbase = $ethereum_client.coinbase["result"]


gas_price = $formatter.to_wei(20, 'shannon')
config = Config.new
config.as(coinbase)
config.set_gas(2000000)
config.set_gas_price(gas_price)
config.deploy_and_wait(120)

period_one = (Time.now).to_i
period_two = (period_one + 4.hours).to_i
period_three = (period_one + 8.hours).to_i
end_date = (period_one + 12.hours).to_i

config.tw_set_config_uint("sale1:period1", period_one)
config.tw_set_config_uint("sale1:period2", period_two)
config.tw_set_config_uint("sale1:period3", period_three)
config.tw_set_config_uint("sale1:end", end_date)
config.tw_set_config_uint("sale1:amount", 1_700_000)
config.tw_set_config_uint("sale1:goal", 50000000)
config.tw_set_config_uint("sale1:famount", 300_000)
config.tw_set_config_address("sale1:fwallet", coinbase)

puts "Crowdsale configured start: #{config.c_get_config_uint("sale1:period1")}"
puts "Crowdsale configured period 2: #{config.c_get_config_uint("sale1:period2")}"
puts "Crowdsale configured period 3: #{config.c_get_config_uint("sale1:period3")}"
puts "Crowdsale configured end: #{config.c_get_config_uint("sale1:end")}"
puts "Crowdsale configured total DAO tokens: #{config.c_get_config_uint("sale1:amount")}"
puts "Crowdsale configured USD cents goal: #{config.c_get_config_uint("sale1:goal")}"
puts "Crowdsale configured total DAO tokens for founders: #{config.c_get_config_uint("sale1:famount")}"
puts "Crowdsale configured founder wallet: #{config.c_get_config_address("sale1:fwallet")}"

token_sales = TokenSales.new
token_sales.as(coinbase)
token_sales.set_gas(3000000)
token_sales.set_gas_price(gas_price)
token_sales.deploy_and_wait(120, config.address)
token_sales.tw_set_eth_to_cents(1180)


build_dir = File.join(ENV['PWD'], "build")
FileUtils.rm_rf(build_dir) if Dir.exists?(build_dir)
FileUtils.mkdir(build_dir)

def build_contract(contract_name, p, build_dir)
  contract = p.contracts[p.contract_names.index(contract_name)]
  abi_file = File.new(File.join(build_dir, "#{contract_name}.abi"), 'w')
  abi_file.puts JSON.pretty_generate(contract.abi)
  bin_file = File.new(File.join(build_dir, "#{contract_name}.bin"), 'w')
  bin_file.puts contract.binary
  abi_file.close
  bin_file.close
end

build_contract("TokenSales", project, build_dir)
build_contract("Config", project, build_dir)

appconfig = {token_sales_address: token_sales.address, config_address: config.address}

File.open(File.join(build_dir, "app_config.js"), 'w') do |file|
  file.puts JSON.pretty_generate(appconfig)
end


